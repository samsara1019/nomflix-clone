{"version":3,"sources":["assets/noImageSmall.png","api.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Components/Header.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStlyes.js","Components/App.js","index.js"],"names":["api","axios","create","baseURL","params","api_key","language","moviesApi","get","id","append_to_response","term","query","tvApi","Container","styled","div","Title","span","Grid","Section","title","children","Loader","role","aria-label","Conatiner","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","imageUrl","rating","year","isMovie","to","require","default","HomePresenter","nowPlaying","upcoming","popular","error","loading","Helmet","length","map","movie","poster_path","original_title","vote_average","release_date","substring","HomeConatainer","state","eroor","a","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","tv","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","evt","preventDefault","searchByTerm","target","Header","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","Backdrop","Content","Cover","Data","h1","ItemContainer","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","includes","match","push","history","numberId","Number","isNaN","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","ReactDOM","render","document","getElementById"],"mappings":"mGAAA,OAAe,cAA0B,0C,gOCEnCA,E,OAAMC,EAAMC,OAAO,CACvBC,QAAS,+BACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAKDC,EACC,kBAAMP,EAAIQ,IAAI,sBADfD,EAED,kBAAMP,EAAIQ,IAAI,mBAFbD,GAGF,kBAAMP,EAAIQ,IAAI,kBAHZD,GAIE,SAAAE,GAAE,OAAIT,EAAIQ,IAAJ,gBAAiBC,GAAM,CACxCL,OAAQ,CACNM,mBAAoB,aANbH,GASH,SAAAI,GAAI,OAAIX,EAAIQ,IAAI,eAAgB,CACtCJ,OAAQ,CACNQ,MAAOD,MAKAE,GACD,kBAAMb,EAAIQ,IAAI,iBADbK,GAEF,kBAAMb,EAAIQ,IAAI,eAFZK,GAGE,kBAAMb,EAAIQ,IAAI,oBAHhBK,GAIC,SAAAJ,GAAE,OAAIT,EAAIQ,IAAJ,aAAcC,GAAM,CACpCL,OAAQ,CACNM,mBAAoB,aANbG,GASH,SAAAF,GAAI,OAAIX,EAAIQ,IAAI,YAAa,CACnCJ,OAAQ,CACNQ,MAAOD,M,iCClCPG,GAAYC,KAAOC,IAAV,mFAKTC,GAAQF,KAAOG,KAAV,sEAILC,GAAOJ,KAAOC,IAAV,2IAsBKI,GAfC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,gBAACR,GAAD,WACE,eAACG,GAAD,UAAQI,IACR,eAACF,GAAD,UAAOG,QCpBLR,GAAYC,KAAOC,IAAV,uJAiBAO,GARA,kBACb,eAAC,GAAD,UACE,uBAAMC,KAAK,MAAMC,aAAW,UAA5B,uBCVEC,GAAYX,KAAOC,IAAV,4FAKTW,GAAOZ,KAAOG,KAAV,iEACC,SAAAU,GAAK,OAAIA,EAAMC,SAkBXC,GAbC,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMF,EAAT,EAASA,MAAT,OACd,eAACH,GAAD,UACE,eAACC,GAAD,CAAME,MAAOA,EAAb,SACGE,OCdDjB,GAAYC,KAAOC,IAAV,gDAKTgB,GAAQjB,KAAOC,IAAV,+NACc,SAAAY,GAAK,OAAEA,EAAMK,SAShCC,GAASnB,KAAOG,KAAV,yIAQNiB,GAAiBpB,KAAOC,IAAV,wJAIhBgB,GAGAE,IAMEjB,GAAQF,KAAOG,KAAV,gJAQLkB,GAAOrB,KAAOG,KAAV,kFAkCKmB,GA3BA,SAAC,GAAD,IAAE5B,EAAF,EAAEA,GAAI6B,EAAN,EAAMA,SAAUjB,EAAhB,EAAgBA,MAAOkB,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,KAA/B,IAAqCC,eAArC,gBACb,eAAC,IAAD,CAAMC,GAAID,EAAO,iBAAahC,GAAb,cAA2BA,GAA5C,SACE,eAAC,GAAD,UACE,gBAAC0B,GAAD,WACE,eAACH,GAAD,CAAOC,MAAOK,EAAQ,yCAAqCA,GAAaK,EAAQ,IAA8BC,UAC9G,gBAACV,GAAD,WACE,uBAAMV,KAAK,MAAMC,aAAW,SAA5B,0BAGCc,EAJH,SAMA,eAAC,GAAD,CAAOlB,MAAOA,EAAd,SAAsBA,IACtB,eAACe,GAAD,UAAOI,YC1DT1B,GAAYC,KAAOC,IAAV,+CAwEA6B,GApEO,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAYC,EAAf,EAAeA,SAAUC,EAAzB,EAAyBA,QAASC,EAAlC,EAAkCA,MAAOC,EAAzC,EAAyCA,QAAzC,OACpB,uCACE,eAACC,GAAA,EAAD,UACE,wDAEDD,EACC,eAAC,GAAD,IAEA,gBAAC,GAAD,WACGJ,GAAcA,EAAWM,OAAS,GACjC,eAAC,GAAD,CAAS/B,MAAM,cAAf,SACGyB,EAAWO,KAAI,SAACC,GAAD,OACd,eAAC,GAAD,CAEE7C,GAAI6C,EAAM7C,GACV6B,SAAUgB,EAAMC,YAChBlC,MAAOiC,EAAME,eACbjB,OAAQe,EAAMG,aACdjB,KAAMc,EAAMI,cAAgBJ,EAAMI,aAAaC,UAAU,EAAG,GAC5DlB,SAAS,GANJa,EAAM7C,SAWlBsC,GAAYA,EAASK,OAAS,GAC7B,eAAC,GAAD,CAAS/B,MAAM,kBAAf,SACG0B,EAASM,KAAI,SAACC,GAAD,OACZ,eAAC,GAAD,CAEE7C,GAAI6C,EAAM7C,GACV6B,SAAUgB,EAAMC,YAChBlC,MAAOiC,EAAME,eACbjB,OAAQe,EAAMG,aACdjB,KAAMc,EAAMI,cAAgBJ,EAAMI,aAAaC,UAAU,EAAG,GAC5DlB,SAAS,GANJa,EAAM7C,SAWlBuC,GAAWA,EAAQI,OAAS,GAC3B,eAAC,GAAD,CAAS/B,MAAM,iBAAf,SACG2B,EAAQK,KAAI,SAACC,GAAD,OACX,eAAC,GAAD,CAEE7C,GAAI6C,EAAM7C,GACV6B,SAAUgB,EAAMC,YAChBlC,MAAOiC,EAAME,eACbjB,OAAQe,EAAMG,aACdjB,KAAMc,EAAMI,cAAgBJ,EAAMI,aAAaC,UAAU,EAAG,GAC5DlB,SAAS,GANJa,EAAM7C,SAWlBwC,GAAS,eAAC,GAAD,CAASpB,MAAM,UAAUE,KAAMkB,WCjElCW,G,4MCGbC,MAAQ,CACNf,WAAY,KACZC,SAAU,KACVC,QAAS,KACTc,MAAO,KACPZ,SAAS,G,8FAGX,sCAAAa,EAAA,+EAEoDxD,IAFpD,uBAE6BuC,EAF7B,EAEYkB,KAAQC,QAFpB,SAGkD1D,IAHlD,uBAG6BwC,EAH7B,EAGYiB,KAAQC,QAHpB,UAIiD1D,KAJjD,iBAI6ByC,EAJ7B,EAIYgB,KAAQC,QAEhBC,KAAKC,SAAS,CACZrB,aACAC,WACAC,YATN,kDAYIkB,KAAKC,SAAS,CACZlB,MAAO,kCAbb,yBAgBIiB,KAAKC,SAAS,CACZjB,SAAS,IAjBf,6E,0EAsBA,WAAU,IAAD,EACmDgB,KAAKL,MAAvDf,EADD,EACCA,WAAYC,EADb,EACaA,SAAUC,EADvB,EACuBA,QAASC,EADhC,EACgCA,MAAOC,EADvC,EACuCA,QAE9C,OACE,eAAC,GAAD,CACEJ,WAAYA,EACZC,SAAUA,EACVC,QAASA,EACTC,MAAOA,EACPC,QAASA,Q,GAxCYkB,IAAMC,WCK7BvD,GAAYC,KAAOC,IAAV,+CAwEAsD,GApEK,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,YAAaxB,EAA1B,EAA0BA,QAASC,EAAnC,EAAmCA,MAAOC,EAA1C,EAA0CA,QAA1C,OAClB,uCACE,eAACC,GAAA,EAAD,UACE,0DAEDD,EACC,eAAC,GAAD,IAEA,gBAAC,GAAD,WACGqB,GAAYA,EAASnB,QACpB,eAAC,GAAD,CAAS/B,MAAM,YAAf,SACGkD,EAASlB,KAAI,SAACoB,GAAD,OACZ,eAAC,GAAD,CAEEhE,GAAIgE,EAAGhE,GACP6B,SAAUmC,EAAGlB,YACblC,MAAOoD,EAAGC,cACVnC,OAAQkC,EAAGhB,aACXjB,KAAMiC,EAAGE,gBAAkBF,EAAGE,eAAehB,UAAU,EAAG,GAC1DlB,SAAS,GANJgC,EAAGhE,SAWf+D,GAAeA,EAAYpB,QAC1B,eAAC,GAAD,CAAS/B,MAAM,eAAf,SACGmD,EAAYnB,KAAI,SAACoB,GAAD,OACf,eAAC,GAAD,CAEEhE,GAAIgE,EAAGhE,GACP6B,SAAUmC,EAAGlB,YACblC,MAAOoD,EAAGC,cACVnC,OAAQkC,EAAGhB,aACXjB,KAAMiC,EAAGE,gBAAkBF,EAAGE,eAAehB,UAAU,EAAG,GAC1DlB,SAAS,GANJgC,EAAGhE,SAWfuC,GAAWA,EAAQI,QAClB,eAAC,GAAD,CAAS/B,MAAM,eAAf,SACG2B,EAAQK,KAAI,SAACoB,GAAD,OACX,eAAC,GAAD,CAEEhE,GAAIgE,EAAGhE,GACP6B,SAAUmC,EAAGlB,YACblC,MAAOoD,EAAGC,cACVnC,OAAQkC,EAAGhB,aACXjB,KAAMiC,EAAGE,gBAAkBF,EAAGE,eAAehB,UAAU,EAAG,GAC1DlB,SAAS,GANJgC,EAAGhE,SAWfwC,GAAS,eAAC,GAAD,CAASpB,MAAM,UAAUE,KAAMkB,WCjElC2B,G,4MCGbf,MAAQ,CACNU,SAAU,KACVC,YAAa,KACbxB,QAAS,KACTc,MAAO,KACPZ,SAAS,G,8FAGX,sCAAAa,EAAA,+EAEkDlD,KAFlD,uBAE6B0D,EAF7B,EAEYP,KAAQC,QAFpB,SAGqDpD,KAHrD,uBAG6B2D,EAH7B,EAGYR,KAAQC,QAHpB,UAIiDpD,KAJjD,iBAI6BmC,EAJ7B,EAIYgB,KAAQC,QAEhBC,KAAKC,SAAS,CACZI,WACAC,cACAxB,YATN,kDAYIkB,KAAKC,SAAS,CACZlB,MAAO,kCAbb,yBAgBIiB,KAAKC,SAAS,CACZjB,SAAS,IAjBf,6E,0EAsBA,WAAU,IAAD,EACoDgB,KAAKL,MAAxDU,EADD,EACCA,SAAUC,EADX,EACWA,YAAaxB,EADxB,EACwBA,QAASC,EADjC,EACiCA,MAAOC,EADxC,EACwCA,QAE/C,OACE,eAAC,GAAD,CACEqB,SAAUA,EACVC,YAAaA,EACbxB,QAASA,EACTC,MAAOA,EACPC,QAASA,Q,GAxCYkB,IAAMC,WCK7BvD,GAAYC,KAAOC,IAAV,+CAIT6D,GAAO9D,KAAO+D,KAAV,qEAKJC,GAAQhE,KAAOiE,MAAV,gFAyFIC,GAnFS,SAAC,GAAD,IACtBC,EADsB,EACtBA,aACAC,EAFsB,EAEtBA,UACAC,EAHsB,EAGtBA,WACAnC,EAJsB,EAItBA,MACAC,EALsB,EAKtBA,QACAmC,EANsB,EAMtBA,aACAC,EAPsB,EAOtBA,WAPsB,OAStB,uCACE,eAACnC,GAAA,EAAD,UACE,wDAGA,gBAAC,GAAD,WACE,eAAC0B,GAAD,CAAMU,SAAUF,EAAhB,SACE,eAACN,GAAD,CACES,YAAY,+BACZC,MAAOL,EACPM,SAAUJ,MAGbpC,EACC,eAAC,GAAD,IAEA,uCACGgC,GAAgBA,EAAa9B,OAAS,GACrC,eAAC,GAAD,CAAS/B,MAAM,eAAf,SACG6D,EAAa7B,KAAI,SAACC,GAAD,OAChB,eAAC,GAAD,CAEE7C,GAAI6C,EAAM7C,GACV6B,SAAUgB,EAAMC,YAChBlC,MAAOiC,EAAME,eACbjB,OAAQe,EAAMG,aACdjB,KACEc,EAAMI,cAAgBJ,EAAMI,aAAaC,UAAU,EAAG,GAExDlB,SAAS,GARJa,EAAM7C,SAalB0E,GAAaA,EAAU/B,OAAS,GAC/B,eAAC,GAAD,CAAS/B,MAAM,YAAf,SACG8D,EAAU9B,KAAI,SAACoB,GAAD,OACb,eAAC,GAAD,CAEEhE,GAAIgE,EAAGhE,GACP6B,SAAUmC,EAAGlB,YACblC,MAAOoD,EAAGC,cACVnC,OAAQkC,EAAGhB,aACXjB,KACEiC,EAAGE,gBAAkBF,EAAGE,eAAehB,UAAU,EAAG,GAEtDlB,SAAS,GARJgC,EAAGhE,SAafwC,GAAS,eAAC,GAAD,CAASpB,MAAM,UAAUE,KAAMkB,IACxCkC,GACCD,GACqB,IAArBC,EAAU/B,QACc,IAAxB8B,EAAa9B,QACX,eAAC,GAAD,CAASvB,MAAM,UAAUE,KAAK,2BCvF/B4D,G,4MCGb9B,MAAQ,CACNqB,aAAc,KACdC,UAAW,KACXC,WAAY,GACZtB,MAAO,KACPZ,SAAS,G,EAGXmC,aAAe,SAACO,GACdA,EAAIC,iBADkB,IAEdT,EAAe,EAAKvB,MAApBuB,WACJA,GACJ,EAAKU,aAAaV,I,EAGpBE,WAAa,SAACM,GAAS,IAETH,EACRG,EADFG,OAAUN,MAEZ,EAAKtB,SAAS,CACZiB,WAAYK,K,EAIhBK,a,uCAAe,WAAOnF,GAAP,qBAAAoD,EAAA,sEAEX,EAAKI,SAAS,CACZjB,SAAS,IAHA,SAMoCrC,GAAaF,GANjD,uBAMcwE,EANd,EAMHnB,KAAQC,QANL,SAOwC1D,GAAiBI,GAPzD,gBAOeuE,EAPf,EAOHlB,KAASC,QAEjB,EAAKE,SAAS,CACZe,eACAC,cAXS,kDAeX,EAAKhB,SAAS,CACZlB,MAAO,wBAhBE,yBAmBX,EAAKkB,SAAS,CACZjB,SAAS,IApBA,6E,kGAyBf,WAAU,IAAD,EACyDgB,KAAKL,MAA7DqB,EADD,EACCA,aAAcC,EADf,EACeA,UAAWC,EAD1B,EAC0BA,WAAYnC,EADtC,EACsCA,MAAOC,EAD7C,EAC6CA,QACpD,OACE,eAAC,GAAD,CACEgC,aAAcA,EACdC,UAAWA,EACXC,WAAYA,EACZnC,MAAOA,EACPC,QAASA,EACTmC,aAAcnB,KAAKmB,aACnBC,WAAYpB,KAAKoB,iB,GA5DIlB,IAAMC,WCA7B2B,GAASjF,KAAOkF,OAAV,qRAcNC,GAAOnF,KAAOoF,GAAV,+CAGJC,GAAOrF,KAAOsF,GAAV,oKAImB,SAAAzE,GAAK,OAAIA,EAAM0E,QAAU,UAAY,iBAI5DC,GAAQxF,aAAOyF,IAAPzF,CAAH,oHAOI0F,gBAAW,gBAAeC,EAAf,EAAGC,SAAYD,SAAf,OACxB,eAACV,GAAD,UACE,gBAACE,GAAD,WACE,eAACE,GAAD,CAAME,QAAsB,MAAbI,EAAf,SACE,eAACH,GAAD,CAAO7D,GAAG,IAAV,sBAEF,eAAC0D,GAAD,CAAME,QAAsB,QAAbI,EAAf,SACE,eAACH,GAAD,CAAO7D,GAAG,MAAV,kBAEF,eAAC0D,GAAD,CAAME,QAAsB,YAAbI,EAAf,SACE,eAACH,GAAD,CAAO7D,GAAG,UAAV,8BCvCF5B,GAAYC,KAAOC,IAAV,qHAOT4F,GAAW7F,KAAOC,IAAV,mQAMY,SAACY,GAAD,OAAWA,EAAMK,SAQrC4E,GAAU9F,KAAOC,IAAV,sHAQP8F,GAAQ/F,KAAOC,IAAV,qLAEe,SAACY,GAAD,OAAWA,EAAMK,SAOrC8E,GAAOhG,KAAOC,IAAV,kEAKJC,GAAQF,KAAOiG,GAAV,yEAILC,GAAgBlG,KAAOC,IAAV,gDAGboF,GAAOrF,KAAOG,KAAV,2BACJgG,GAAUnG,KAAOG,KAAV,gDAGPiG,GAAWpG,KAAOqG,EAAV,yHAwECC,IAjECtG,KAAOoF,GAAV,+CAGDpF,KAAOsF,GAAV,oKAIoB,SAAAzE,GAAK,OAAIA,EAAM0E,QAAU,UAAY,iBAI1C,SAAC,GAAD,IAAGgB,EAAH,EAAGA,OAAQrE,EAAX,EAAWA,MAAX,SAAkBC,QAEtC,uCACE,eAACC,GAAA,EAAD,UACE,4DAEF,eAAC,GAAD,OAEAF,EACF,eAAC,GAAD,CAASpB,MAAM,UAAUE,KAAMkB,IAE/B,gBAAC,GAAD,WACE,eAACE,GAAA,EAAD,UACE,mCAAQmE,EAAO5C,eAAiB4C,EAAO9D,eAAvC,kBAEF,eAACoD,GAAD,CACE3E,MAAK,6CAAwCqF,EAAOC,iBAEtD,gBAACV,GAAD,WACE,eAACC,GAAD,CACE7E,MACEqF,EAAO/D,YAAP,6CAC0C+D,EAAO/D,aAC7CZ,EAAQ,IAAiCC,UAGjD,gBAACmE,GAAD,WACE,eAAC,GAAD,UAAQO,EAAO5C,eAAiB4C,EAAO9D,iBACvC,gBAACyD,GAAD,WACE,eAAC,GAAD,WACIK,EAAO5D,cAAgB4D,EAAO3C,gBAAgBhB,UAAU,EAAG,KAE/D,eAACuD,GAAD,mBACA,gBAAC,GAAD,WAAOI,EAAOE,SAAWF,EAAOG,iBAAiB,GAAjD,UACA,eAACP,GAAD,mBACA,eAAC,GAAD,UACGI,EAAOI,QACNJ,EAAOI,OAAOrE,KAAI,SAACsE,EAAOC,GACxB,OAAiB,IAAVA,EAAA,aAAoBD,EAAME,MAASF,EAAME,aAIxD,eAACV,GAAD,UAAWG,EAAOQ,sBCvHbC,G,kDCGb,WAAYnG,GAAQ,IAAD,sBACjB,cAAMA,GADW,IAGH8E,EACV9E,EADF+E,SAAYD,SAHG,OAMjB,EAAK7C,MAAQ,CACXyD,OAAQ,KACRrE,MAAO,KACPC,SAAS,EACTT,QAASiE,EAASsB,SAAS,YAVZ,E,4FAcnB,0CAAAjE,EAAA,2DAMMG,KAAKtC,MAHKnB,EAHhB,EAEIwH,MACE7H,OAAUK,GAEDyH,EALf,EAKIC,QAAWD,KAELzF,EAAYyB,KAAKL,MAAjBpB,QACF2F,EAAWC,OAAO5H,IACpB6H,MAAMF,GATZ,yCAUWF,EAAK,MAVhB,mBAcIhE,KAAKC,SAAS,CACZjB,SAAS,IAGPoE,EAAS,MACT7E,EAnBR,kCAoBgClC,GAAsB6H,GApBtD,iBAoBed,EApBf,EAoBStD,KApBT,yCAsBgCnD,GAAiBuH,GAtBjD,iBAsBed,EAtBf,EAsBStD,KAtBT,QAwBIE,KAAKC,SAAS,CACZmD,WAzBN,kDA4BIpD,KAAKC,SAAS,CACZlB,MAAO,sBA7Bb,yBAgCIiB,KAAKC,SAAS,CACZjB,SAAS,IAjCf,6E,0EAsCA,WAAU,IAAD,EAC4BgB,KAAKL,MAAhCyD,EADD,EACCA,OAAQrE,EADT,EACSA,MAAOC,EADhB,EACgBA,QACvB,OACE,eAAC,GAAD,CACEoE,OAAQA,EACRrE,MAAOA,EACPC,QAASA,Q,GA3DYkB,IAAMC,WCSpB,qBACb,gBAAC,IAAD,WACE,eAAC,GAAD,IACA,qCACE,gBAAC,IAAD,WACE,eAAC,IAAD,CAAOkE,KAAK,IAAIC,OAAK,EAACC,UAAWC,KACjC,eAAC,IAAD,CAAOH,KAAK,MAAMC,OAAK,EAACC,UAAWE,KACnC,eAAC,IAAD,CAAOJ,KAAK,UAAUC,OAAK,EAACC,UAAWG,KACvC,eAAC,IAAD,CAAOL,KAAK,aAAaE,UAAWI,KACpC,eAAC,IAAD,CAAON,KAAK,UAAUE,UAAWI,KACjC,eAAC,IAAD,CAAUC,KAAK,IAAIpG,GAAG,e,SCFfqG,GAlBMC,aAAH,mZACdC,MCWWC,G,4JAVb,WACE,OACE,uCACE,eAACC,GAAD,IACA,eAAC,GAAD,W,GALU9E,aCAlB+E,IAASC,OACP,eAAC,GAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.132714ed.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noImageSmall.ddc2b0c7.png\";","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3\",\n  params: {\n    api_key: \"c100d0e046cdffad8dbfda47d92f5073\",\n    language: \"en-US\",\n  }\n});\n\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: id => api.get(`movie/${id}`, {\n    params: {\n      append_to_response: \"videos\",\n    }\n  }),\n  search: term => api.get(\"search/movie\", {\n    params: {\n      query: term,\n    }\n  }),\n}\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  showDetail: id => api.get(`tv/${id}`, {\n    params: {\n      append_to_response: \"videos\",\n    }\n  }),\n  search: term => api.get(\"search/tv\", {\n    params: {\n      query: term,\n    }\n  }),\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 25px;\n  }\n`;\nconst Title = styled.span`\n  font-size: 14px;\n  font-weight: 600;\n`;\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ])\n}\n\nexport default Section;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 30px;\n  margin-top: 20px;\n`;\n\nconst Loader = () => (\n  <Container>\n    <span role=\"img\" aria-label=\"Loading\">\n      ⏰\n    </span>\n  </Container>\n);\n\nexport default Loader;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Conatiner = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\nconst Text = styled.span`\n  color: ${props => props.color};\n  font-weight: 600;\n`;\n\n\nconst Message = ({ text, color }) => (\n  <Conatiner>\n    <Text color={color}>\n      {text}\n    </Text>\n  </Conatiner>\n);\n\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n}\nexport default Message;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nconst Container = styled.div`\n font-size: 12px;\n`;\n\n\nconst Image = styled.div`\n background-image: url(${props=>props.bgUrl});\n height: 180px;\n background-size: cover;\n border-radius: 4px;\n background-position: center center;\n transition: opacity .2s ease-in-out;\n margin-bottom: 5px;\n`;\n\nconst Rating = styled.span`\n  top: 163px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n  transition: opacity .2s ease-in-out;\n`;\n\nconst ImageContainer = styled.div`\n margin-bottom: 5px;\n position: relative;\n &:hover {\n  ${Image}{\n    opacity: .4;\n  }  \n  ${Rating} {\n    opacity: 1;\n  }\n }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`;\n\nconst Year = styled.span`\n font-size: 10px;\n color: rgba(255, 255, 255, .5);\n`;\n\n\n\nconst Poster = ({id, imageUrl, title, rating, year, isMovie = false}) => (\n  <Link to={isMovie ? `/movie/${id}` : `/tv/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image bgUrl={imageUrl ? `https://image.tmdb.org/t/p/w500${imageUrl}` : require(\"../assets/noImageSmall.png\").default}></Image>\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐️\n          </span>\n          {rating}/10\n        </Rating>\n        <Title title={title}>{title}</Title>\n        <Year>{year}</Year>\n      </ImageContainer>\n    </Container>\n  </Link>\n)\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool\n}\n\nexport default Poster;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, upcoming, popular, error, loading }) => (\n  <>\n    <Helmet>\n      <title>Movies | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader></Loader>\n    ) : (\n      <Container>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing\">\n            {nowPlaying.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"Upcoming Movies\">\n            {upcoming.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Movies\">\n            {popular.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error}></Message>}\n      </Container>\n    )}\n  </>\n);\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  upcoming: PropTypes.array,\n  popular: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default HomePresenter;\n","import HomeConatainer from \"./HomeContainer\";\n\nexport default HomeConatainer;","import { moviesApi } from \"api\";\nimport React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    eroor: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const { data: { results: nowPlaying } } = await moviesApi.nowPlaying();\n      const { data: { results: upcoming } } = await moviesApi.upcoming();\n      const { data: { results: popular } } = await moviesApi.popular();\n      \n      this.setState({\n        nowPlaying, \n        upcoming,\n        popular\n      })\n    } catch (error) {\n      this.setState({\n        error: \"Can't find Movie's infomation\"\n      })\n    } finally {\n      this.setState({\n        loading: false\n      })\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    \n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, airingToday, popular, error, loading }) => (\n  <>\n    <Helmet>\n      <title>TV Shows | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader></Loader>\n    ) : (\n      <Container>\n        {topRated && topRated.length && (\n          <Section title=\"Top Rated\">\n            {topRated.map((tv) => (\n              <Poster\n                key={tv.id}\n                id={tv.id}\n                imageUrl={tv.poster_path}\n                title={tv.original_name}\n                rating={tv.vote_average}\n                year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\n                isMovie={false}\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length && (\n          <Section title=\"Airing Today\">\n            {airingToday.map((tv) => (\n              <Poster\n                key={tv.id}\n                id={tv.id}\n                imageUrl={tv.poster_path}\n                title={tv.original_name}\n                rating={tv.vote_average}\n                year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\n                isMovie={false}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length && (\n          <Section title=\"Popular show\">\n            {popular.map((tv) => (\n              <Poster\n                key={tv.id}\n                id={tv.id}\n                imageUrl={tv.poster_path}\n                title={tv.original_name}\n                rating={tv.vote_average}\n                year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\n                isMovie={false}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error}></Message>}\n      </Container>\n    )}\n  </>\n);\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  airingToday: PropTypes.array,\n  popular: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default TVPresenter;\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;","import { tvApi } from \"api\";\nimport React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    airingToday: null,\n    popular: null,\n    eroor: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const { data: { results: topRated } } = await tvApi.topRated();\n      const { data: { results: airingToday } } = await tvApi.airingToday();\n      const { data: { results: popular } } = await tvApi.popular();\n    \n      this.setState({\n        topRated,\n        airingToday,\n        popular\n      })\n    } catch (error) {\n      this.setState({\n        error: \"Can't find Movie's infomation\"\n      })\n    } finally {\n      this.setState({\n        loading: false\n      })\n    }\n  }\n\n  render() {\n    const { topRated, airingToday, popular, error, loading } = this.state;\n    \n    return (\n      <TVPresenter\n        topRated={topRated}\n        airingToday={airingToday}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  searchTerm,\n  error,\n  loading,\n  handleSubmit,\n  updateTerm,\n}) => (\n  <>\n    <Helmet>\n      <title>Search | Nomflix</title>\n    </Helmet>\n    {\n      <Container>\n        <Form onSubmit={handleSubmit}>\n          <Input\n            placeholder=\"Search Movies or TV Shows...\"\n            value={searchTerm}\n            onChange={updateTerm}\n          ></Input>\n        </Form>\n        {loading ? (\n          <Loader />\n        ) : (\n          <>\n            {movieResults && movieResults.length > 0 && (\n              <Section title=\"Movie Result\">\n                {movieResults.map((movie) => (\n                  <Poster\n                    key={movie.id}\n                    id={movie.id}\n                    imageUrl={movie.poster_path}\n                    title={movie.original_title}\n                    rating={movie.vote_average}\n                    year={\n                      movie.release_date && movie.release_date.substring(0, 4)\n                    }\n                    isMovie={true}\n                  />\n                ))}\n              </Section>\n            )}\n            {tvResults && tvResults.length > 0 && (\n              <Section title=\"TV Result\">\n                {tvResults.map((tv) => (\n                  <Poster\n                    key={tv.id}\n                    id={tv.id}\n                    imageUrl={tv.poster_path}\n                    title={tv.original_name}\n                    rating={tv.vote_average}\n                    year={\n                      tv.first_air_date && tv.first_air_date.substring(0, 4)\n                    }\n                    isMovie={false}\n                  />\n                ))}\n              </Section>\n            )}\n            {error && <Message color=\"#e74c3c\" text={error}></Message>}\n            {tvResults &&\n              movieResults &&\n              tvResults.length === 0 &&\n              movieResults.length === 0 && (\n                <Message color=\"#95a5a6\" text=\"Noting Found\"></Message>\n              )}\n          </>\n        )}\n      </Container>\n    }\n  </>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  searchTerm: PropTypes.string,\n  handleSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;","import { moviesApi, tvApi } from \"api\";\nimport React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    eroor: null,\n    loading: false,\n  };\n\n  handleSubmit = (evt) => {\n    evt.preventDefault();\n    const { searchTerm } = this.state;\n    if(!searchTerm) return;\n    this.searchByTerm(searchTerm);\n  }\n\n  updateTerm = (evt) => {\n    const {\n      target: { value }\n    } = evt;\n    this.setState({\n      searchTerm: value\n    })\n  }\n\n  searchByTerm = async (term) => {\n    try {\n      this.setState({\n        loading: true,\n      })\n      \n      const { data: { results: tvResults } } = await tvApi.search(term);\n      const { data : { results: movieResults } } = await moviesApi.search(term);\n\n      this.setState({\n        movieResults,\n        tvResults,\n      })\n      \n    } catch (error) {\n      this.setState({\n        error: \"can't find results!\",\n      })\n    } finally {\n      this.setState({\n        loading: false,\n      })\n    }\n  }\n\n  render() {\n    const { movieResults, tvResults, searchTerm, error, loading } = this.state;\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        searchTerm={searchTerm}\n        error={error}\n        loading={loading}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  padding: 0px 10px;\n  background-color: rgba(20, 20, 20, 0.8);\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0,0,0,0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`\nconst Item = styled.li`\n  height: 50px;\n  width: 50px;\n  text-align: center;\n  border-bottom: 5px solid ${props => props.current ? \"#3498db\" : \"transparent\" };\n  transition: border-bottom .5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    <List>\n      <Item current={pathname === \"/\"}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === \"/tv\"}>\n        <SLink to=\"/tv\">TV</SLink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </Header>\n));\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${(props) => props.bgUrl});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  z-index: 1;\n  position: relative;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${(props) => props.bgUrl});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h1`\n  font-size: 32px;\n  margin-bottom: 10px;\n`;\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\nconst Item = styled.span``;\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\nconst Overview = styled.p`\n  font-size: 12px;\n  color: rgba(255, 255, 255, 0.7);\n  line-height: 1.5;\n  width: 50%;\n`;\n\nconst TabList = styled.ul`\n  display: flex;\n`\nconst Tab = styled.li`\n  height: 50px;\n  width: 50px;\n  text-align: center;\n  border-bottom: 5px solid ${props => props.current ? \"#3498db\" : \"transparent\" };\n  transition: border-bottom .5s ease-in-out;\n`;\n\nconst DetailPresenter = ({ result, error, loading }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading... | Nomflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : error ? (\n    <Message color=\"#e74c3c\" text={error} />\n  ) : (\n    <Container>\n      <Helmet>\n        <title>{result.original_name || result.original_title} | Nomflix</title>\n      </Helmet>\n      <Backdrop\n        bgUrl={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgUrl={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require(\"../../assets/noImageSmall.png\").default\n          }\n        />\n        <Data>\n          <Title>{result.original_name || result.original_title}</Title>\n          <ItemContainer>\n            <Item>\n              {(result.release_date || result.first_air_date).substring(0, 4)}\n            </Item>\n            <Divider>·</Divider>\n            <Item>{result.runtime || result.episode_run_time[0]} min</Item>\n            <Divider>·</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) => {\n                  return index !== 0 ? ` / ${genre.name}` : genre.name;\n                })}\n            </Item>\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n        </Data>\n      </Content>\n    </Container>\n  );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default DetailPresenter;\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;","import { moviesApi, tvApi } from \"api\";\nimport React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname },\n    } = props;\n\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie/\"),\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id },\n      },\n      history: { push },\n    } = this.props;\n    const { isMovie } = this.state;\n    const numberId = Number(id);\n    if (isNaN(numberId)) {\n      return push(\"/\");\n    }\n\n    try {\n      this.setState({\n        loading: true,\n      });\n\n      let result = null;\n      if (isMovie) {\n        ({ data: result } = await moviesApi.movieDetail(numberId));\n      } else {\n        ({ data: result } = await tvApi.showDetail(numberId));\n      }\n      this.setState({\n        result,\n      });\n    } catch (error) {\n      this.setState({\n        error: \"can't find detail\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const { result, error, loading } = this.state;\n    return (\n      <DetailPresenter\n        result={result}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport Home from \"Routes/Home\";\nimport TV from \"Routes/TV\";\nimport Search from \"Routes/Search\";\nimport Header from \"Components/Header\";\nimport Detail from \"Routes/Detail\";\n\nexport default () => (\n  <Router>\n    <Header></Header>\n    <>\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/tv\" exact component={TV} />\n        <Route path=\"/search\" exact component={Search} />\n        <Route path=\"/movie/:id\" component={Detail} />\n        <Route path=\"/tv/:id\" component={Detail} />\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </>\n  </Router>\n);\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n  ${reset};\n  a {\n    text-decoration: none;\n    color: inherit;\n  }\n  * {\n    box-sizing: border-box;\n  }\n  body {\n    font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    font-size: 12px;\n    background-color:rgba(20, 20, 20, 1);\n    color: white;\n    padding-top: 50px;\n  }\n`;\n\nexport default globalStyles;","import React, { Component } from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStlyes\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles/>\n      </>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'Components/App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}